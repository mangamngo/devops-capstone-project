#
# This pipeline needs the following tasks from Tekton Hub
#   - git-clone
#   - flake8
# The tasks are installed from tekton hub just like we would install them from OpenShift earlier
# then they are called through taskRef
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:  
  name: cd-pipeline
spec:
  workspaces:
    - name: pipeline-workspace
  params:
    - name: repo-url
    - name: branch
      default: main
  tasks:
    - name: init
      workspaces:
        - name: source
          workspace: pipeline-workspace          
      taskRef:
        name: cleanup

    - name: clone
      workspaces:
        - name: output
          workspace: pipeline-workspace          
      taskRef:
        name: git-clone
      params:
      - name: url
        value: $(params.repo-url)
      - name: revision
        value: $(params.branch)
      runAfter:
        - init
  
    - name: lint
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: flake8 # installed from tekton hub
      params:
      - name: image
        value: "python:3.9-slim"
      - name: args
        value: ["--count","--max-complexity=10","--max-line-length=127","--statistics", "--ignore=E402,F841,F401,E302,E305,W293,W292"] # since the code passed CI linting, just ignore space related issues
      runAfter:
        - clone
    
    - name: tests
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: nose
      params:
      - name: database_uri
        value: "sqlite:///test.db"
      - name: args
        value: "-v --with-spec --spec-color"
      runAfter:
        - clone
